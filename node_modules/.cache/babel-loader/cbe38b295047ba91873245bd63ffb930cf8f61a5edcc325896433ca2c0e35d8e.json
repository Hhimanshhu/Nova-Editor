{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\";\nimport React from 'react';\nimport './About.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About(props) {\n  const getBackgroundColor = () => {\n    if (props.redmode === 'red') return 'red';\n    if (props.mode === 'dark') return '#212529';\n    return 'white';\n  };\n  const getTextColor = () => {\n    return props.mode === 'dark' || props.redmode === 'red' ? 'white' : 'black';\n  };\n  const myStyle = {\n    color: getTextColor(),\n    backgroundColor: getBackgroundColor(),\n    border: `1px solid ${getTextColor()}`\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container my-3\",\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center\",\n      children: \"About Us\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      id: \"accordionExample\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseOne\",\n            \"aria-expanded\": \"true\",\n            \"aria-controls\": \"collapseOne\",\n            children: \"Accordion Item #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseOne\",\n          className: \"accordion-collapse collapse show\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the first item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), \" It is shown by default...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseTwo\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseTwo\",\n            children: \"Accordion Item #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseTwo\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the second item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this), \" It is hidden by default...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseThree\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseThree\",\n            children: \"Accordion Item #3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseThree\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the third item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" It is hidden by default...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n\n//   </>\n//   );\n// }\n\n// export default App;\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","props","getBackgroundColor","redmode","mode","getTextColor","myStyle","color","backgroundColor","border","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["\nimport React from 'react';\nimport './About.css';\n\nexport default function About(props) {\n  \n  const getBackgroundColor = () => {\n    if (props.redmode === 'red') return 'red';  \n    if (props.mode === 'dark') return '#212529'; \n    return 'white';  \n  };\n\n  const getTextColor = () => {\n    return (props.mode === 'dark' || props.redmode === 'red') ? 'white' : 'black';\n  };\n\n  const myStyle = {\n    color: getTextColor(),\n    backgroundColor: getBackgroundColor(),\n    border: `1px solid ${getTextColor()}`\n  };\n\n  return (\n    <div className=\"container my-3\" style={myStyle}>  \n      <h2 className=\"text-center\">About Us</h2>\n      \n      <div className=\"accordion\" id=\"accordionExample\">\n        \n        <div className=\"accordion-item\" style={myStyle}>\n          <h2 className=\"accordion-header\">\n            <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\" aria-controls=\"collapseOne\">\n              Accordion Item #1\n            </button>\n          </h2>\n          <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              <strong>This is the first item's accordion body.</strong> It is shown by default...\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item\" style={myStyle}>\n          <h2 className=\"accordion-header\">\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n              Accordion Item #2\n            </button>\n          </h2>\n          <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              <strong>This is the second item's accordion body.</strong> It is hidden by default...\n            </div>\n          </div>\n        </div>\n\n        <div className=\"accordion-item\" style={myStyle}>\n          <h2 className=\"accordion-header\">\n            <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\" aria-controls=\"collapseThree\">\n              Accordion Item #3\n            </button>\n          </h2>\n          <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\n            <div className=\"accordion-body\">\n              <strong>This is the third item's accordion body.</strong> It is hidden by default...\n            </div>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n  \n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n  \n  \n  \n  \n  \n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n \n//   </>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}