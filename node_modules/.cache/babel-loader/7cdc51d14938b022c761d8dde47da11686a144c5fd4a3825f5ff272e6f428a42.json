{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\components\\\\About.js\";\nimport React from 'react';\nimport './About.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About(props) {\n  const getBackgroundColor = () => {\n    if (props.redmode === 'red') return '#212529'; // Red mode background\n    if (props.mode === 'dark') return '#212529'; // Dark mode background\n    return 'white'; // Default light mode background\n  };\n  const getTextColor = () => {\n    return props.mode === 'dark' || props.redmode === 'red' ? 'white' : 'black';\n  };\n  const myStyle = {\n    color: getTextColor(),\n    backgroundColor: getBackgroundColor(),\n    border: `1px solid ${getTextColor()}` // Dynamic border color\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      color: getTextColor()\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"About Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion\",\n      id: \"accordionExample\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseOne\",\n            \"aria-expanded\": \"true\",\n            \"aria-controls\": \"collapseOne\",\n            style: {\n              ...myStyle,\n              border: 'none'\n            },\n            children: \"Text Editing Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseOne\",\n          className: \"accordion-collapse collapse show\",\n          \"data-bs-parent\": \"#accordionExample\",\n          style: myStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: \"Convert text to UPPERCASE or lowercase instantly.br Clear text with a single click. Copy text easily for use anywhere.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseTwo\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseTwo\",\n            style: {\n              ...myStyle,\n              border: 'none'\n            },\n            children: \"Accordion Item #2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseTwo\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          style: myStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the second item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 77\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"accordion-item\",\n        style: myStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"accordion-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"accordion-button collapsed\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseThree\",\n            \"aria-expanded\": \"false\",\n            \"aria-controls\": \"collapseThree\",\n            style: {\n              ...myStyle,\n              border: 'none'\n            },\n            children: \"Accordion Item #3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseThree\",\n          className: \"accordion-collapse collapse\",\n          \"data-bs-parent\": \"#accordionExample\",\n          style: myStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"accordion-body\",\n            style: myStyle,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the third item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 11\n            }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 77\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","props","getBackgroundColor","redmode","mode","getTextColor","myStyle","color","backgroundColor","border","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/components/About.js"],"sourcesContent":["  import React from 'react'\r\n  import './About.css';\r\n\r\n  export default function About(props) {\r\n\r\n    const getBackgroundColor = () => {\r\n      if (props.redmode === 'red') return '#212529'; // Red mode background\r\n      if (props.mode === 'dark') return '#212529'; // Dark mode background\r\n      return 'white'; // Default light mode background\r\n    };\r\n  \r\n    const getTextColor = () => {\r\n      return props.mode === 'dark' || props.redmode === 'red' ? 'white' : 'black';\r\n    };\r\n  \r\n    const myStyle = {\r\n      color: getTextColor(),\r\n      backgroundColor: getBackgroundColor(),\r\n      border: `1px solid ${getTextColor()}`, // Dynamic border color\r\n    };\r\n  \r\n    return (\r\n    \r\n    <div className=\"container\" style={{ color: getTextColor() }}>\r\n    <h2><center>About Us</center></h2>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n    <div className=\"accordion-item\" style={myStyle}>\r\n      <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"  style={{ ...myStyle, border: 'none' }} >\r\n        Text Editing Features\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n        Convert text to UPPERCASE or lowercase instantly.br\r\n        Clear text with a single click.\r\n        Copy text easily for use anywhere.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\"  style={myStyle} >\r\n      <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"  style={{ ...myStyle, border: 'none' }} >\r\n          Accordion Item #2\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the\r\n          appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing\r\n          and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. \r\n          It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does \r\n          limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\" style={myStyle}>\r\n      <h2 className=\"accordion-header\">\r\n        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"  style={{ ...myStyle, border: 'none' }} >\r\n          Accordion Item #3\r\n        </button>\r\n      </h2>\r\n      <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n        <div className=\"accordion-body\" style={myStyle}>\r\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the \r\n          appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing \r\n          and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. \r\n          It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does \r\n          limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n\r\n    )\r\n  }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}