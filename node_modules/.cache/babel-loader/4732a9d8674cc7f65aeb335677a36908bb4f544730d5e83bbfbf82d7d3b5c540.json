{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n// import TextForm from './components/TextForm';\n// import Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [redmode, setredmode] = useState(\"light\");\n\n//   const [alert, setalert] = useState(null);\n//   const showalert = (message, type) => {\n//     setalert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   };\n\n//   let togglemode = (cls) => {\n//     if (mode === \"dark\") {\n//       setMode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Light mode\";       //Not Needed\n//     } else {\n//       setMode(\"dark\");\n//       showalert(\"Dark Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Dark mode\"         //Not Needed\n//     }\n//   };\n\n//   let togglemode1 = () => {\n//     if (redmode === \"red\") {\n//       setredmode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//     } else {\n//       setredmode(\"red\");\n//       showalert(\"Red Mode enable\", \"success\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar\n//         titlex={\"TextUtiles\"}\n//         abouttext=\"About\"\n//         dropdown=\"List\"\n//         mode={mode}\n//         redmode={redmode}\n//         togglemode={togglemode}\n//         togglemode1={togglemode1}\n//       />\n\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//       <Routes>\n//           <Route path=\"/about\" element={<About mode={mode} redmode = {redmode} />} />\n//           <Route path=\"/\" element={<TextForm heading=\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\" mode={mode} showalert={showalert} />} />\n//       </Routes>\n//    {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//       </div>\n\n//       </Router>\n//     </>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n// import TextForm from './components/TextForm';\n// import Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [redmode, setredmode] = useState(\"light\");\n\n//   const [alert, setalert] = useState(null);\n//   const showalert = (message, type) => {\n//     setalert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   };\n  \n//   let togglemode = (cls) => {\n//     if (mode === \"dark\") {\n//       setMode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Light mode\";       //Not Needed\n//     } else {\n//       setMode(\"dark\");\n//       showalert(\"Dark Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Dark mode\"         //Not Needed\n//     }\n//   };\n\n//   let togglemode1 = () => {\n//     if (redmode === \"red\") {\n//       setredmode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//     } else {\n//       setredmode(\"red\");\n//       showalert(\"Red Mode enable\", \"success\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar\n//         titlex={\"TextUtiles\"}\n//         abouttext=\"About\"\n//         dropdown=\"List\"\n//         mode={mode}\n//         redmode={redmode}\n//         togglemode={togglemode}\n//         togglemode1={togglemode1}\n//       />\n\n\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//       <Routes>\n//           <Route path=\"/about\" element={<About mode={mode} redmode = {redmode} />} />\n//           <Route path=\"/\" element={<TextForm heading=\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\" mode={mode} showalert={showalert} />} />\n//       </Routes>\n//    {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//       </div>\n\n    \n     \n\n    \n//       </Router>\n//     </>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}