{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // 'light', 'dark', 'red'\n\n  // Toggle Mode\n  const toggleMode = newMode => {\n    setMode(newMode);\n    document.body.className = newMode; // Directly set class\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TextUtils\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMode(mode === \"dark\" ? \"light\" : \"dark\"),\n        children: mode === \"dark\" ? \"Disable Dark Mode\" : \"Enable Dark Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleMode(mode === \"red\" ? \"light\" : \"red\"),\n        children: mode === \"red\" ? \"Disable Red Mode\" : \"Enable Red Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ckwlr2Ue1/16M01etSJDlsATeMQ=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n\n//   </>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","About","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","App","_s","mode","setMode","toggleMode","newMode","document","body","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // 'light', 'dark', 'red'\n\n  // Toggle Mode\n  const toggleMode = (newMode) => {\n    setMode(newMode);\n    document.body.className = newMode; // Directly set class\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <h2>TextUtils</h2>\n        <button onClick={() => toggleMode(mode === \"dark\" ? \"light\" : \"dark\")}>\n          {mode === \"dark\" ? \"Disable Dark Mode\" : \"Enable Dark Mode\"}\n        </button>\n        <button onClick={() => toggleMode(mode === \"red\" ? \"light\" : \"red\")}>\n          {mode === \"red\" ? \"Disable Red Mode\" : \"Enable Red Mode\"}\n        </button>\n      </nav>\n\n      {/* Pass Mode to About.js */}\n      <About mode={mode} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n  \n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n  \n  \n  \n  \n  \n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n \n//   </>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE3C;EACA,MAAMY,UAAU,GAAIC,OAAO,IAAK;IAC9BF,OAAO,CAACE,OAAO,CAAC;IAChBC,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGH,OAAO,CAAC,CAAC;EACrC,CAAC;EAED,oBACEN,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAKS,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBV,OAAA;QAAAU,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBd,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACF,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG,MAAM,CAAE;QAAAO,QAAA,EACnEP,IAAI,KAAK,MAAM,GAAG,mBAAmB,GAAG;MAAkB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACTd,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMV,UAAU,CAACF,IAAI,KAAK,KAAK,GAAG,OAAO,GAAG,KAAK,CAAE;QAAAO,QAAA,EACjEP,IAAI,KAAK,KAAK,GAAG,kBAAkB,GAAG;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGNd,OAAA,CAACL,KAAK;MAACQ,IAAI,EAAEA;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEV;AAACZ,EAAA,CAzBQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA2BZ,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}