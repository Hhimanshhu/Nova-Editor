{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // Dark Mode State\n  const [redmode, setRedMode] = useState('light'); // Red Mode State\n\n  // Toggle Dark Mode\n  const toggleDarkMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.classList.add('dark');\n      document.body.classList.remove('light', 'red');\n    } else {\n      setMode('light');\n      document.body.classList.add('light');\n      document.body.classList.remove('dark', 'red');\n    }\n  };\n\n  // Toggle Red Mode\n  const toggleRedMode = () => {\n    if (redmode === 'light') {\n      setRedMode('red');\n      document.body.classList.add('red');\n      document.body.classList.remove('light', 'dark');\n    } else {\n      setRedMode('light');\n      document.body.classList.add('light');\n      document.body.classList.remove('red', 'dark');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"TextUtils\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        children: mode === 'light' ? 'Enable Dark Mode' : 'Disable Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleRedMode,\n        children: redmode === 'light' ? 'Enable Red Mode' : 'Disable Red Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode,\n      redmode: redmode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rZfuisxfEf54qIailzgIV7f4pc8=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n\n//   </>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","jsxDEV","_jsxDEV","App","_s","mode","setMode","redmode","setRedMode","toggleDarkMode","document","body","classList","add","remove","toggleRedMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport About from './About';\n\nfunction App() {\n  const [mode, setMode] = useState('light');  // Dark Mode State\n  const [redmode, setRedMode] = useState('light'); // Red Mode State\n\n  // Toggle Dark Mode\n  const toggleDarkMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.classList.add('dark');\n      document.body.classList.remove('light', 'red');\n    } else {\n      setMode('light');\n      document.body.classList.add('light');\n      document.body.classList.remove('dark', 'red');\n    }\n  };\n\n  // Toggle Red Mode\n  const toggleRedMode = () => {\n    if (redmode === 'light') {\n      setRedMode('red');\n      document.body.classList.add('red');\n      document.body.classList.remove('light', 'dark');\n    } else {\n      setRedMode('light');\n      document.body.classList.add('light');\n      document.body.classList.remove('red', 'dark');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar\">\n        <h2>TextUtils</h2>\n        <button onClick={toggleDarkMode}>\n          {mode === 'light' ? 'Enable Dark Mode' : 'Disable Dark Mode'}\n        </button>\n        <button onClick={toggleRedMode}>\n          {redmode === 'light' ? 'Enable Red Mode' : 'Disable Red Mode'}\n        </button>\n      </nav>\n\n      {/* Pass Both Modes to About.js */}\n      <About mode={mode} redmode={redmode} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n  \n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n  \n  \n  \n  \n  \n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n \n//   </>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}