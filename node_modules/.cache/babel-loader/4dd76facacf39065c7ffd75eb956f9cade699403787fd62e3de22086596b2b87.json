{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";// import About from \"./components/About\";\nimport Navbar from\"./components/Navbar\";import TextForm from'./components/TextForm';import Alert from\"./components/Alert\";// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[redmode,setredmode]=useState(\"light\");const[alert,setalert]=useState(null);const showalert=(message,type)=>{setalert({msg:message,type:type});setTimeout(()=>{setalert(null);},2000);};let togglemode=()=>{if(mode===\"dark\"){setMode(\"light\");showalert(\"Light Mode enable\",\"success\");// document.title = \"TextEditor-Light mode\";       //Not Needed\n}else{setMode(\"dark\");showalert(\"Dark Mode enable\",\"success\");// document.title = \"TextEditor-Dark mode\"         //Not Needed\n}};let togglemode1=()=>{if(redmode===\"red\"){setredmode(\"light\");showalert(\"Light Mode enable\",\"success\");}else{setredmode(\"red\");showalert(\"Red Mode enable\",\"success\");}};useEffect(()=>{document.body.className=`${mode} ${redmode}`;// Apply class based on mode\n},[mode,redmode]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{titlex:\"TextUtiles\",abouttext:\"About\",dropdown:\"List\",mode:mode,redmode:redmode,togglemode:togglemode,togglemode1:togglemode1}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter Your Thought\",mode:mode,showalert:showalert,children:\" \"})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Navbar","TextForm","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","mode","setMode","redmode","setredmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","togglemode1","document","body","className","children","titlex","abouttext","dropdown","heading"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [redmode, setredmode] = useState(\"light\");\n\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  let togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n      // document.title = \"TextEditor-Light mode\";       //Not Needed\n    } else {\n      setMode(\"dark\");\n      showalert(\"Dark Mode enable\", \"success\");\n      // document.title = \"TextEditor-Dark mode\"         //Not Needed\n    }\n  };\n\n  let togglemode1 = () => {\n    if (redmode === \"red\") {\n      setredmode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n    } else {\n      setredmode(\"red\");\n      showalert(\"Red Mode enable\", \"success\");\n    }\n  };\n\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n  }, [mode, redmode]);\n\n  return (\n    <>\n    {/* <Router> */}\n\n      <Navbar\n        titlex={\"TextUtiles\"}\n        abouttext=\"About\"\n        dropdown=\"List\"\n        mode={mode}\n        redmode={redmode}\n        togglemode={togglemode}\n        togglemode1={togglemode1}\n      />\n\n\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      {/* <Routes> */}\n          {/* <Route path=\"/about\" element={<About />} /> */}\n          {/* <Route path=\"/\" element={<TextForm heading=\"Enter Your Thought\" mode={mode} showalert={showalert} />} /> */}\n      {/* </Routes> */}\n   <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm>\n      </div>\n\n    \n     \n\n    \n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB;AACA,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAEtC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,OAAO,CAAC,CACzC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,OAAO,CAAC,CAE/C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAAAkB,SAAS,CAAGA,CAACC,OAAO,CAAEC,IAAI,GAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAEF,OAAO,CACZC,IAAI,CAAEA,IACR,CAAC,CAAC,CACFE,UAAU,CAAC,IAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,GAAI,CAAAM,UAAU,CAAGA,CAAA,GAAM,CACrB,GAAIX,IAAI,GAAK,MAAM,CAAE,CACnBC,OAAO,CAAC,OAAO,CAAC,CAChBK,SAAS,CAAC,mBAAmB,CAAE,SAAS,CAAC,CACzC;AACF,CAAC,IAAM,CACLL,OAAO,CAAC,MAAM,CAAC,CACfK,SAAS,CAAC,kBAAkB,CAAE,SAAS,CAAC,CACxC;AACF,CACF,CAAC,CAED,GAAI,CAAAM,WAAW,CAAGA,CAAA,GAAM,CACtB,GAAIV,OAAO,GAAK,KAAK,CAAE,CACrBC,UAAU,CAAC,OAAO,CAAC,CACnBG,SAAS,CAAC,mBAAmB,CAAE,SAAS,CAAC,CAC3C,CAAC,IAAM,CACLH,UAAU,CAAC,KAAK,CAAC,CACjBG,SAAS,CAAC,iBAAiB,CAAE,SAAS,CAAC,CACzC,CACF,CAAC,CAEDjB,SAAS,CAAC,IAAM,CACdwB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAG,GAAGf,IAAI,IAAIE,OAAO,EAAE,CAAE;AAClD,CAAC,CAAE,CAACF,IAAI,CAAEE,OAAO,CAAC,CAAC,CAEnB,mBACEJ,KAAA,CAAAF,SAAA,EAAAoB,QAAA,eAGEtB,IAAA,CAACJ,MAAM,EACL2B,MAAM,CAAE,YAAa,CACrBC,SAAS,CAAC,OAAO,CACjBC,QAAQ,CAAC,MAAM,CACfnB,IAAI,CAAEA,IAAK,CACXE,OAAO,CAAEA,OAAQ,CACjBS,UAAU,CAAEA,UAAW,CACvBC,WAAW,CAAEA,WAAY,CAC1B,CAAC,cAGFlB,IAAA,CAACF,KAAK,EAACY,KAAK,CAAEA,KAAM,CAAE,CAAC,cACvBV,IAAA,QAAKqB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAKlCtB,IAAA,CAACH,QAAQ,EAAC6B,OAAO,CAAC,oBAAoB,CAACpB,IAAI,CAAGA,IAAK,CAACM,SAAS,CAAGA,SAAU,CAAAU,QAAA,CAAC,GAAC,CAAU,CAAC,CAC/E,CAAC,EAON,CAAC,CAEP,CAEA,cAAe,CAAAjB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}