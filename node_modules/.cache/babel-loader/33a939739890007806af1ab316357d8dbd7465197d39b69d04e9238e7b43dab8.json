{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 2000);\n  };\n  const toggleMode = newMode => {\n    if (mode !== newMode) {\n      setMode(newMode);\n      showAlert(`${newMode.charAt(0).toUpperCase() + newMode.slice(1)} Mode Enabled`, 'success');\n    } else {\n      setMode('light');\n      showAlert('Light Mode Enabled', 'success');\n    }\n  };\n  useEffect(() => {\n    document.body.className = mode; // Apply only the selected mode\n  }, [mode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      titlex: \"TextUtils\",\n      abouttext: \"About\",\n      dropdown: \"List\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(About, {\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"0A1roMwN2sZef2SvsftE2j1RIuA=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n\n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n\n//   </>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","About","Navbar","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","newMode","charAt","toUpperCase","slice","document","body","className","children","titlex","abouttext","dropdown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => setAlert(null), 2000);\n  };\n\n  const toggleMode = (newMode) => {\n    if (mode !== newMode) {\n      setMode(newMode);\n      showAlert(`${newMode.charAt(0).toUpperCase() + newMode.slice(1)} Mode Enabled`, 'success');\n    } else {\n      setMode('light');\n      showAlert('Light Mode Enabled', 'success');\n    }\n  };\n\n  useEffect(() => {\n    document.body.className = mode;  // Apply only the selected mode\n  }, [mode]);\n\n  return (\n    <>\n      <Navbar titlex=\"TextUtils\" abouttext=\"About\" dropdown=\"List\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <About mode={mode} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import './App.css';\n// import About from './components/About';\n// import Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\n// import Alert from './components/Alert';\n\n// function App() {\n//   const [mode, setMode] = useState('light');\n//   const [redmode, setredmode] = useState('light');\n  \n\n//   const [alert,setalert] = useState(null);\n//   const showalert = (message,type) =>{\n//     setalert({\n//       msg: message,\n//       type: type\n//     })\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   } \n\n//   let togglemode =() =>{\n//     if(mode === 'dark'){\n//       setMode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setMode('dark');      \n//       showalert(\"Dark Mode enable\",\"success\"  );\n//     }\n//   }\n\n\n\n//   let togglemode1 =() =>{\n//     if(redmode === 'red'){\n//       setredmode('light');\n//       showalert(\"Light Mode enable\",\"success\");\n      \n//     }else{\n//       setredmode('red');      \n//       showalert(\"Red Mode enable\",\"success\"  );\n//     }\n//   }\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n//   }, [mode, redmode]);\n  \n  \n  \n  \n  \n//   return (\n//     <>\n//   <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n//   <Alert alert = {alert}/>\n//   <div className=\"container my-3\" >\n//     {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//   </div>\n\n//   <About mode={mode} />\n \n//   </>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMe,SAAS,GAAGA,CAACC,OAAO,EAAEC,IAAI,KAAK;IACnCH,QAAQ,CAAC;MAAEI,GAAG,EAAEF,OAAO;MAAEC,IAAI,EAAEA;IAAK,CAAC,CAAC;IACtCE,UAAU,CAAC,MAAML,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EACxC,CAAC;EAED,MAAMM,UAAU,GAAIC,OAAO,IAAK;IAC9B,IAAIV,IAAI,KAAKU,OAAO,EAAE;MACpBT,OAAO,CAACS,OAAO,CAAC;MAChBN,SAAS,CAAC,GAAGM,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,eAAe,EAAE,SAAS,CAAC;IAC5F,CAAC,MAAM;MACLZ,OAAO,CAAC,OAAO,CAAC;MAChBG,SAAS,CAAC,oBAAoB,EAAE,SAAS,CAAC;IAC5C;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdwB,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGhB,IAAI,CAAC,CAAE;EACnC,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,oBACEL,OAAA,CAAAE,SAAA;IAAAoB,QAAA,gBACEtB,OAAA,CAACH,MAAM;MAAC0B,MAAM,EAAC,WAAW;MAACC,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAC,MAAM;MAACpB,IAAI,EAAEA,IAAK;MAACS,UAAU,EAAEA;IAAW;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnG7B,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvB7B,OAAA;MAAKqB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtB,OAAA,CAACJ,KAAK;QAACS,IAAI,EAAEA;MAAK;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA,eACN,CAAC;AAEP;AAACzB,EAAA,CAhCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAkCZ,eAAeA,GAAG;;AAKlB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}