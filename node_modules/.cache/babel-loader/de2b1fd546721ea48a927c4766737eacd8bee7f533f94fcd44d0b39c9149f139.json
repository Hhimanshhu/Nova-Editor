{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const [redmode, setredmode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  let togglemode = () => {\n    if (mode === 'dark') {\n      setMode('light');\n      showalert(\"Light Mode enable\", \"success\");\n      document.title = \"TextEditor-Light mode\";\n    } else {\n      setMode('dark');\n      showalert(\"Dark Mode enable\", \"success\");\n      document.title = \"TextEditor-Dark mode\";\n    }\n  };\n  let togglemode1 = () => {\n    if (redmode === 'red') {\n      setredmode('light');\n      showalert(\"Light Mode enable\", \"success\");\n    } else {\n      setredmode('red');\n      showalert(\"Red Mode enable\", \"success\");\n    }\n  };\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n  }, [mode, redmode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      titlex: \"TextUtiles\",\n      abouttext: \"About\",\n      dropdown: \"List\",\n      mode: mode,\n      redmode: redmode,\n      togglemode: togglemode,\n      togglemode1: togglemode1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"IhmjQhZHuobbNwZd0M2Xmr7mz0o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","About","Navbar","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","redmode","setredmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","document","title","togglemode1","body","className","children","titlex","abouttext","dropdown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\n// import TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [redmode, setredmode] = useState('light');\n  \n\n  const [alert,setalert] = useState(null);\n  const showalert = (message,type) =>{\n    setalert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  } \n\n  let togglemode =() =>{\n    if(mode === 'dark'){\n      setMode('light');\n      showalert(\"Light Mode enable\",\"success\");\n      document.title = \"TextEditor-Light mode\";\n      \n    }else{\n      setMode('dark');      \n      showalert(\"Dark Mode enable\",\"success\"  );\n      document.title = \"TextEditor-Dark mode\"\n    }\n  }\n\n\n\n  let togglemode1 =() =>{\n    if(redmode === 'red'){\n      setredmode('light');\n      showalert(\"Light Mode enable\",\"success\");\n      \n    }else{\n      setredmode('red');      \n      showalert(\"Red Mode enable\",\"success\"  );\n    }\n  }\n\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`;  // Apply class based on mode\n  }, [mode, redmode]);\n  \n  \n  \n  \n  \n  return (\n    <>\n  <Navbar titlex = {\"TextUtiles\"} abouttext = \"About\"  dropdown = \"List\" mode = {mode} redmode = {redmode}  togglemode={togglemode} togglemode1={togglemode1}  />\n  <Alert alert = {alert}/>\n  <div className=\"container my-3\" >\n    {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n  </div>\n\n  <About mode={mode} />\n \n  </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}