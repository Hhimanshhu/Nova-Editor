{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import\"./App.css\";import About from\"./components/About\";import Navbar from\"./components/Navbar\";import TextForm from'./components/TextForm';import Alert from\"./components/Alert\";import{BrowserRouter as Router,Routes,Route}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState(\"light\");const[redmode,setredmode]=useState(\"light\");const[alert,setalert]=useState(null);const showalert=(message,type)=>{setalert({msg:message,type:type});setTimeout(()=>{setalert(null);},2000);};const togglemode=cls=>{console.log(cls);// Remove only color-related classes but keep dark mode class\ndocument.body.classList.remove(\"bg-primary\",\"bg-warning\",\"bg-info\",\"bg-success\");if(cls!==\"dark\"&&cls!==\"light\"){document.body.classList.add(\"bg-\"+cls);showalert(cls.charAt(0).toUpperCase()+cls.slice(1)+\" Mode enabled\",\"success\");}else{if(mode===\"dark\"){setMode(\"light\");document.body.classList.remove(\"bg-dark\");showalert(\"Light Mode enabled\",\"success\");}else{setMode(\"dark\");document.body.classList.add(\"bg-dark\");showalert(\"Dark Mode enabled\",\"success\");}}};// let togglemode = (cls) => {\n//   document.body.className = \"\";  // Remove all existing classes\n//   document.body.classList.add(cls); // Add the selected class\n//   setMode(cls); // Update state\n//   // if (mode === \"dark\") {\n//   //   setMode(\"light\");\n//   //   showalert(\"Light Mode enable\", \"success\");\n//   //   // document.title = \"TextEditor-Light mode\";       //Not Needed\n//   // } else {\n//   //   setMode(\"dark\");\n//   //   showalert(\"Dark Mode enable\", \"success\");\n//   //   // document.title = \"TextEditor-Dark mode\"         //Not Needed\n//   // }\n// };\nlet togglemode1=()=>{if(redmode===\"red\"){setredmode(\"light\");showalert(\"Light Mode enable\",\"success\");}else{setredmode(\"red\");showalert(\"Red Mode enable\",\"success\");}};useEffect(()=>{document.body.className=`${mode} ${redmode}`;// Apply class based on mode\n},[mode,redmode]);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{titlex:\"TextUtiles\",abouttext:\"About\",dropdown:\"List\",mode:mode,redmode:redmode,togglemode:togglemode,togglemode1:togglemode1}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(\"div\",{className:\"container my-3\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/about\",element:/*#__PURE__*/_jsx(About,{mode:mode,redmode:redmode})}),/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\",mode:mode,showalert:showalert})})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","About","Navbar","TextForm","Alert","BrowserRouter","Router","Routes","Route","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","redmode","setredmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","cls","console","log","document","body","classList","remove","add","charAt","toUpperCase","slice","togglemode1","className","children","titlex","abouttext","dropdown","path","element","heading"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [redmode, setredmode] = useState(\"light\");\n\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  \n\nconst togglemode = (cls) => {\n  console.log(cls);\n\n  // Remove only color-related classes but keep dark mode class\n  document.body.classList.remove(\"bg-primary\", \"bg-warning\", \"bg-info\", \"bg-success\");\n\n  if (cls !== \"dark\" && cls !== \"light\") {\n    document.body.classList.add(\"bg-\" + cls);\n    showalert(cls.charAt(0).toUpperCase() + cls.slice(1) + \" Mode enabled\", \"success\");\n  } else {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.classList.remove(\"bg-dark\");\n      showalert(\"Light Mode enabled\", \"success\");\n    } else {\n      setMode(\"dark\");\n      document.body.classList.add(\"bg-dark\");\n      showalert(\"Dark Mode enabled\", \"success\");\n    }\n  }\n};\n\n\n  // let togglemode = (cls) => {\n\n  //   document.body.className = \"\";  // Remove all existing classes\n  //   document.body.classList.add(cls); // Add the selected class\n  //   setMode(cls); // Update state\n\n  //   // if (mode === \"dark\") {\n  //   //   setMode(\"light\");\n  //   //   showalert(\"Light Mode enable\", \"success\");\n  //   //   // document.title = \"TextEditor-Light mode\";       //Not Needed\n  //   // } else {\n  //   //   setMode(\"dark\");\n  //   //   showalert(\"Dark Mode enable\", \"success\");\n  //   //   // document.title = \"TextEditor-Dark mode\"         //Not Needed\n  //   // }\n  // };\n\n  let togglemode1 = () => {\n    if (redmode === \"red\") {\n      setredmode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n    } else {\n      setredmode(\"red\");\n      showalert(\"Red Mode enable\", \"success\");\n    }\n  };\n\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n  }, [mode, redmode]);\n\n  return (\n    <>\n    <Router>\n\n      <Navbar\n        titlex={\"TextUtiles\"}\n        abouttext=\"About\"\n        dropdown=\"List\"\n        mode={mode}\n        redmode={redmode}\n        togglemode={togglemode}\n        togglemode1={togglemode1}\n      />\n\n\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Routes>\n          <Route path=\"/about\" element={<About mode={mode} redmode = {redmode} />} />\n          <Route path=\"/\" element={<TextForm heading=\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\" mode={mode} showalert={showalert} />} />\n      </Routes>\n   {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n      </div>\n\n    \n     \n\n    \n      </Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}