{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\"); // Default mode\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  const toggleMode = cls => {\n    document.body.className = \"\"; // Remove all existing classes\n    document.body.classList.add(cls); // Add the selected class\n\n    setMode(cls); // Update state\n    showAlert(`${cls.charAt(0).toUpperCase() + cls.slice(1)} Mode Enabled`, \"success\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        titlex: \"TextUtiles\",\n        abouttext: \"About\",\n        dropdown: \"List\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container my-3\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            element: /*#__PURE__*/_jsxDEV(About, {\n              mode: mode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(TextForm, {\n              heading: \"Text Editor - Word Counter, Character Counter, Remove Extra Space, and Many More\",\n              mode: mode,\n              showAlert: showAlert\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 38\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"0HOcw1k7gBoZtgDKz+uDOLkRLtw=\");\n_c = App;\nexport default App;\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n// import TextForm from './components/TextForm';\n// import Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [redmode, setredmode] = useState(\"light\");\n\n//   const [alert, setalert] = useState(null);\n//   const showalert = (message, type) => {\n//     setalert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   };\n\n//   let togglemode = (cls) => {\n//     if (mode === \"dark\") {\n//       setMode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Light mode\";       //Not Needed\n//     } else {\n//       setMode(\"dark\");\n//       showalert(\"Dark Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Dark mode\"         //Not Needed\n//     }\n//   };\n\n//   let togglemode1 = () => {\n//     if (redmode === \"red\") {\n//       setredmode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//     } else {\n//       setredmode(\"red\");\n//       showalert(\"Red Mode enable\", \"success\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar\n//         titlex={\"TextUtiles\"}\n//         abouttext=\"About\"\n//         dropdown=\"List\"\n//         mode={mode}\n//         redmode={redmode}\n//         togglemode={togglemode}\n//         togglemode1={togglemode1}\n//       />\n\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//       <Routes>\n//           <Route path=\"/about\" element={<About mode={mode} redmode = {redmode} />} />\n//           <Route path=\"/\" element={<TextForm heading=\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\" mode={mode} showalert={showalert} />} />\n//       </Routes>\n//    {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//       </div>\n\n//       </Router>\n//     </>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","cls","document","body","className","classList","add","charAt","toUpperCase","slice","children","titlex","abouttext","dropdown","fileName","_jsxFileName","lineNumber","columnNumber","path","element","heading","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");  // Default mode\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = (cls) => {\n    document.body.className = \"\";  // Remove all existing classes\n    document.body.classList.add(cls); // Add the selected class\n\n    setMode(cls); // Update state\n    showAlert(`${cls.charAt(0).toUpperCase() + cls.slice(1)} Mode Enabled`, \"success\");\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          titlex=\"TextUtiles\"\n          abouttext=\"About\"\n          dropdown=\"List\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n\n        <Alert alert={alert} />\n\n        <div className=\"container my-3\">\n          <Routes>\n            <Route path=\"/about\" element={<About mode={mode} />} />\n            <Route path=\"/\" element={<TextForm heading=\"Text Editor - Word Counter, Character Counter, Remove Extra Space, and Many More\" mode={mode} showAlert={showAlert} />} />\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import About from \"./components/About\";\n// import Navbar from \"./components/Navbar\";\n// import TextForm from './components/TextForm';\n// import Alert from \"./components/Alert\";\n\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// function App() {\n//   const [mode, setMode] = useState(\"light\");\n//   const [redmode, setredmode] = useState(\"light\");\n\n//   const [alert, setalert] = useState(null);\n//   const showalert = (message, type) => {\n//     setalert({\n//       msg: message,\n//       type: type,\n//     });\n//     setTimeout(() => {\n//       setalert(null);\n//     }, 2000);\n//   };\n  \n//   let togglemode = (cls) => {\n//     if (mode === \"dark\") {\n//       setMode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Light mode\";       //Not Needed\n//     } else {\n//       setMode(\"dark\");\n//       showalert(\"Dark Mode enable\", \"success\");\n//       // document.title = \"TextEditor-Dark mode\"         //Not Needed\n//     }\n//   };\n\n//   let togglemode1 = () => {\n//     if (redmode === \"red\") {\n//       setredmode(\"light\");\n//       showalert(\"Light Mode enable\", \"success\");\n//     } else {\n//       setredmode(\"red\");\n//       showalert(\"Red Mode enable\", \"success\");\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n//   }, [mode, redmode]);\n\n//   return (\n//     <>\n//     <Router>\n\n//       <Navbar\n//         titlex={\"TextUtiles\"}\n//         abouttext=\"About\"\n//         dropdown=\"List\"\n//         mode={mode}\n//         redmode={redmode}\n//         togglemode={togglemode}\n//         togglemode1={togglemode1}\n//       />\n\n\n//       <Alert alert={alert} />\n//       <div className=\"container my-3\">\n//       <Routes>\n//           <Route path=\"/about\" element={<About mode={mode} redmode = {redmode} />} />\n//           <Route path=\"/\" element={<TextForm heading=\"Text Editor -Word Counter, Character Counter, Remove Extra space and Many More\" mode={mode} showalert={showalert} />} />\n//       </Routes>\n//    {/* <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm> */}\n//       </div>\n\n    \n     \n\n    \n//       </Router>\n//     </>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}