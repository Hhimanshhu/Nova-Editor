{"ast":null,"code":"var _jsxFileName = \"E:\\\\Programming\\\\React\\\\texteditor\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [redmode, setredmode] = useState(\"light\");\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n  let togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n      // document.title = \"TextEditor-Light mode\";       //Not Needed\n    } else {\n      setMode(\"dark\");\n      showalert(\"Dark Mode enable\", \"success\");\n      // document.title = \"TextEditor-Dark mode\"         //Not Needed\n    }\n  };\n  let togglemode1 = () => {\n    if (redmode === \"red\") {\n      setredmode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n    } else {\n      setredmode(\"red\");\n      showalert(\"Red Mode enable\", \"success\");\n    }\n  };\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n  }, [mode, redmode]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      titlex: \"TextUtiles\",\n      abouttext: \"About\",\n      dropdown: \"List\",\n      mode: mode,\n      redmode: redmode,\n      togglemode: togglemode,\n      togglemode1: togglemode1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        heading: \"Enter Your Thought\",\n        mode: mode,\n        showalert: showalert,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-3\",\n          children: /*#__PURE__*/_jsxDEV(TextForm, {\n            heading: \"Enter Your Thought\",\n            mode: mode,\n            showalert: showalert,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {\n      mode: mode,\n      redmode: redmode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"+Zo/IIdWIQBgs0QCxNCafqkkI9I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","About","Navbar","TextForm","Alert","BrowserRouter","Router","Switch","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","redmode","setredmode","alert","setalert","showalert","message","type","msg","setTimeout","togglemode","togglemode1","document","body","className","children","titlex","abouttext","dropdown","fileName","_jsxFileName","lineNumber","columnNumber","heading","path","_c","$RefreshReg$"],"sources":["E:/Programming/React/texteditor/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from './components/TextForm';\nimport Alert from \"./components/Alert\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [redmode, setredmode] = useState(\"light\");\n\n  const [alert, setalert] = useState(null);\n  const showalert = (message, type) => {\n    setalert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 2000);\n  };\n\n  let togglemode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n      // document.title = \"TextEditor-Light mode\";       //Not Needed\n    } else {\n      setMode(\"dark\");\n      showalert(\"Dark Mode enable\", \"success\");\n      // document.title = \"TextEditor-Dark mode\"         //Not Needed\n    }\n  };\n\n  let togglemode1 = () => {\n    if (redmode === \"red\") {\n      setredmode(\"light\");\n      showalert(\"Light Mode enable\", \"success\");\n    } else {\n      setredmode(\"red\");\n      showalert(\"Red Mode enable\", \"success\");\n    }\n  };\n\n  useEffect(() => {\n    document.body.className = `${mode} ${redmode}`; // Apply class based on mode\n  }, [mode, redmode]);\n\n  return (\n    <>\n      <Navbar\n        titlex={\"TextUtiles\"}\n        abouttext=\"About\"\n        dropdown=\"List\"\n        mode={mode}\n        redmode={redmode}\n        togglemode={togglemode}\n        togglemode1={togglemode1}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm>\n      </div>\n\n      <Switch>\n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <div className=\"container my-3\">\n            <TextForm heading=\"Enter Your Thought\" mode ={mode} showalert ={showalert}> </TextForm>\n          </div>\n        </Route>\n      </Switch>\n\n      <About mode={mode} redmode={redmode} />\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}